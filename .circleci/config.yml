version: 2.1


jobs:
  deploy-dev:
    
    docker:
        - image: cimg/php:8.0.5
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
         fingerprints: 
          - "11:7d:ae:d2:b5:c9:18:5f:1b:aa:ba:e7:dd:4f:50:f4"
      - checkout
      # install dependencies
      - setup_remote_docker:
          version: 20.10.12
          docker_layer_caching: true
      - run:
          name: Install dependencies
          command: composer install

      - run: sudo apt update
      - run: sudo apt-get install rsync

      - run:
          name: Update known hosts
          command: ssh-keyscan -H 192.254.235.94 >> ~/.ssh/known_hosts
      - run:
          name: find and replace in document
          command: |
            sed -i -e 's:/public/index.php:/index.php:g' server.php && sed -i -e 's:/../vendor/autoload.php:/vendor/autoload.php:g' public/index.php && sed -i -e 's:DB_DATABASE=forge:DB_DATABASE=bartumen_forge_dev:g' .env.sample && sed -i -e 's:DB_USERNAME=forge:DB_USERNAME=bartumen_forge:g' .env.sample  && sed -i -e 's:/../bootstrap/app.php:/bootstrap/app.php:g' public/index.php

      - run:
          name: rename .env.sample file to .env 
          command: |
            mv .env.sample .env
      - run:
          name: Directory Listing  
          command: |
            composer install && ls
      - run:
          name: ssh login  
          command: |
            rsync -va --delete app database vendor phpunit.xml storage artisan public/ .env tests bootstrap  composer.json  docker-compose.yml      resources    webpack.mix.js composer.lock  Dockerfile.dev routes config package.json	server.php bartumen@192.254.235.94:devapi.bartumenergy.com
      # - run:
      #     name: ssh and run migration on live server  
      #     command: |
      #       ssh bartumen@192.254.235.94 && cd devapi.bartumenergy.com &&  php artisan migrate && ls && exit
      - run:
          name: Directory Listing  
          command: ls
  deploy-prod:
    docker:
        - image: cimg/php:8.0.5
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints: 
          - "11:7d:ae:d2:b5:c9:18:5f:1b:aa:ba:e7:dd:4f:50:f4"
      - checkout
      # install dependencies
      - setup_remote_docker:
          version: 20.10.12
          docker_layer_caching: true
      - run:
          name: Install dependencies
          command: composer install

      - run: sudo apt update
      - run: sudo apt-get install rsync

      - run:
          name: Update known hosts
          command: ssh-keyscan -H 192.254.235.94 >> ~/.ssh/known_hosts
      - run:
          name: find and replace in document
          command: |
            sed -i -e 's:/public/index.php:/index.php:g' server.php && sed -i -e 's:/../vendor/autoload.php:/vendor/autoload.php:g' public/index.php && sed -i -e 's:DB_DATABASE=forge:DB_DATABASE=bartumen_forge_dev:g' .env.sample && sed -i -e 's:DB_USERNAME=forge:DB_USERNAME=bartumen_forge:g' .env.sample  && sed -i -e 's:/../bootstrap/app.php:/bootstrap/app.php:g' public/index.php

      - run:
          name: rename .env.sample file to .env 
          command: |
            mv .env.sample .env
      - run:
          name: Directory Listing  
          command: |
            composer install && ls
      - run:
          name: ssh login  
          command: |
            rsync -va --delete app database vendor phpunit.xml storage artisan public/ .env tests bootstrap  composer.json  docker-compose.yml      resources    webpack.mix.js composer.lock  Dockerfile.dev routes config package.json	server.php bartumen@192.254.235.94:api.bartumenergy.com
      # - run:
      #     name: ssh and run migration on live server  
      #     command: |
      #       ssh bartumen@192.254.235.94 && cd api.bartumenergy.com &&  php artisan migrate && ls && exit
      - run:
          name: Directory Listing  
          command: ls
workflows:
  version: 2
  Barm_deploy:
    jobs:
      - deploy-dev: # Use the pre-configured job, deploy-via-git
          filters:
            branches:
              only: dev
      - deploy-prod: # Use the pre-configured job, deploy-via-git
          filters:
            branches:
              only: master